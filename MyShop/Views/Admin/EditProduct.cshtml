@model MyShop.Models.ViewModels.ProductVM

@{
    /**/

    ViewBag.Title = "EditProduct";
}

<h2>Редактировать Товар</h2>

@using (Html.BeginForm("EditProduct", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            <div class="col-md-10">
                @if (Model.PathImage != null)
                {<img src="/Files/Products/@Model.Id/@Model.PathImage" height="100" width="50" />
                   
                }
                else
                {

                    <img src="~/Content/img/no_image.png" height="100" width="50" />
                }

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PathImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PathImage, new { @readonly = "readonly", @class = "form-control" })


            </div>
        </div>
        <div class="form-group">

            <h5 class="control-label col-md-2">Новое фото</h5>
            <div class=col-md-10>

                <input type="file" name="uploadImage" value="@Model.PathImage" id="fileImage" />
                <img id="imgpreview" src="~/Content/img/no_image.png" />
            </div>

        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.CategoryId, ViewBag.CategorysShow1 as SelectList)

            </div>
        </div>

    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-info m-3" />
        </div>
    </div>

}

@if (!Model.GaleryImages.Any())
{
    <h4>Данный продукт не содержит галерею</h4>
}
<form action="/Admin/SaveGalery" method="post" enctype="multipart/form-data"
      class="dropzone" id="dropzoneForm">
    <div class="fallback">
        <input type="file" name="file" multiple="" />
        <input type="submit" value="Upload" />
    </div>
</form>
<br />
<div class="row">
    @foreach (var item in Model.GaleryImages)
    {
        <div class="col" >
            <div class="galleryStyle">
                <img src="/Files/Products/@Model.Id/Gallery/@item" height="150" width="100" />
                <div>
                    @Html.ActionLink("Delete", "DeleteItemGalery", "Admin", new { @class = "deleteimage btn btn-danger m-2", data_name = item })
                </div>
            </div>
        </div>
    }

</div>

<div>
    @Html.ActionLink("Back to List", "ListProducts", "Admin")
</div>

<link href="~/Scripts/dropzone/basic.css" rel="stylesheet" />
<link href="~/Scripts/dropzone/dropzone.css" rel="stylesheet" />
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
    <script src="~/Scripts/dropzone/dropzone.js"></script>
    <script>
        CKEDITOR.replace("Description")



        $(function () {

            /* Preview selected image */

            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $("img#imgpreview")
                            .attr("src", e.target.result)
                            .width(200)
                            .height(200);
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }

            $("#fileImage").change(function () {
                readURL(this);
            });

            /**/
        });
                /**/




            /* Dropzone js*/

        Dropzone.options.dropzoneForm = {
            acceptedFiles: "image/*",
            init: function () {
                this.on("complete",
                    function (file) {
                        if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
                            location.reload();
                        }
                    });
                this.on("sending",
                    function (file, xhr, formData) {
                        formData.append("id",  @Model.Id);
                    });
            }
        };

        /*-----------------------------------------------------------*/

            /* Delete gallery image */

            $("a.deleteimage").click(function(e) {
                e.preventDefault();

                if (!confirm("Удалить файл ?")) return false;

                var $this = $(this);
                var url = "/Admin/DeleteItemGalery";
                var imageName = $this.data("name");


                $.post(url, { id: @Model.Id, imageName: imageName }, function(data) {
                    $this.parent().parent().parent().fadeOut("slow");

                });
            });


            /*-----------------------------------------------------------*/


    </script>


}